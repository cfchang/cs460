/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-11-05 22:48:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import edu.bu.cs.cs460.photoshare.NewUserDao;

public final class newuser_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("edu.bu.cs.cs460.photoshare.NewUserDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      edu.bu.cs.cs460.photoshare.NewUserBean newUserBean = null;
      newUserBean = (edu.bu.cs.cs460.photoshare.NewUserBean) _jspx_page_context.getAttribute("newUserBean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (newUserBean == null){
        newUserBean = new edu.bu.cs.cs460.photoshare.NewUserBean();
        _jspx_page_context.setAttribute("newUserBean", newUserBean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("newUserBean"), request);
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head><title>New User</title></head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("<!-- We want to show the form unless we successfully create a new user -->\n");
 boolean showForm = true;
   String err = null; 
      out.write('\n');
      out.write('\n');
 if (request.getUserPrincipal() == null) {
   if (!newUserBean.getEmail().equals("")) {
    	if (!newUserBean.getPassword1().equals(newUserBean.getPassword2())) {
       		err = "Both password strings must match";
     	}
     	else if (newUserBean.getPassword1().length() < 4) {
       		err = "Your password must be at least four characters long";
     	}
	 	else if (newUserBean.getFirstName().length() < 1) {
	 		err = "You must enter your first name";
	 	}
	 	else if (newUserBean.getLastName().length() < 1) {
	 			err = "You must enter your last name";
	 	}
	 	else if (newUserBean.getDateOfBirth().length() < 1) {
	 		err = "You must enter your date of birth";
	 	} 
     	else {
       		NewUserDao newUserDao = new NewUserDao();
       		boolean success = newUserDao.create(newUserBean.getEmail(),
             	newUserBean.getPassword1(), newUserBean.getFirstName(),
		        newUserBean.getLastName(), newUserBean.getDateOfBirth(),
		        newUserBean.getGender(), newUserBean.getHCity());
		
       		if (success) {
         		showForm = false;
       		} else {
         		err = "Couldn't create user (that email may already be in use)";
       		}
     	}
   	}
 } else {
 	err = "You are a registered user already!";
 }

      out.write('\n');
      out.write('\n');
 if (err != null) { 
      out.write("\n");
      out.write("<font color=red><b>Error: ");
      out.print( err );
      out.write("</b></font>\n");
 } 
      out.write('\n');
      out.write('\n');
 if (showForm) { 
      out.write("\n");
      out.write("\n");
      out.write("<h2>New User Information</h2></br>\n");
      out.write("<h4>Please enter the following information to register</h4>\n");
      out.write("\n");
      out.write("<form action=\"newuser.jsp\" method=\"post\">\n");
      out.write("  Email: <input type=\"text\" name=\"email\"/><br>\n");
      out.write("  Password: <input type=\"password\" name=\"password1\"/><br>\n");
      out.write("  Re-enter password: <input type=\"password\" name=\"password2\"/><br>\n");
      out.write("  First Name: <input type=\"text\" name=\"firstName\"/><br>\n");
      out.write("  Last Name: <input type=\"text\" name=\"lastName\"/><br>\n");
      out.write("  Date of Birth (YYYY-MM-DD): <input type=\"text\" name=\"dateOfBirth\"/><br>\n");
      out.write("  (The following informations are optional.) <br>\n");
      out.write("  <legend>Select your Gender: </legend>\n");
      out.write("  <input type=\"radio\" name=\"gender\" value=\"M\" checked>Male\n");
      out.write("  <input type=\"radio\" name=\"gender\" value=\"F\">Female<br>\n");
      out.write("  Home City: <input type=\"text\" name=\"homeCity\"/><br>\n");
      out.write("  <input type=\"submit\" value=\"Create\"/><br/>\n");
      out.write("</form>\n");
      out.write("\n");
 }
   else { 
      out.write("\n");
      out.write("\n");
      out.write("<h2>Success!</h2>\n");
      out.write("\n");
      out.write("<p>A new user has been created with email ");
      out.print( newUserBean.getEmail() );
      out.write(".\n");
      out.write("You can now return to the <a href=\"index.jsp\">login page</a>.\n");
      out.write("\n");
 } 
      out.write("\n");
      out.write("\n");
      out.write("<h4><a href=\"main.jsp\">Return to Main Page</a></h4>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
